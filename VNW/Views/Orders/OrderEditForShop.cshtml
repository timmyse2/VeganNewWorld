@model VNW.ViewModels.OrderViewModel
@using VNW.Common

@{
    ViewData["Title"] = "訂單修改(商家模式)";
    decimal totalSum = 0;
    int OdsRowCount = 0; //:: order details count|index for form <input> name
}

<h2>@ViewData["Title"]</h2>

<hr />

<div>
    <h3 class="alert-info" id="td_serverMessage">@TempData["td_serverMessage"]</h3>
    <h3 class="alert-danger" id="td_serverWarning">@TempData["td_serverWarning"]</h3>
</div>

@if (Model == null)
{
    return;
}

<a asp-action="OrderDetailsForShop" asp-controller="orderDetails" asp-route-id="@Model.OrderId"
   class="btn btn-lg btn-default">取消修改|返回前頁</a>


<div id="MaskWindow"
     style="opacity:0.05;background:#000;width:200%;height:200%;z-index:99;position:absolute;top:0;left:0;cursor:no-drop;display:none;"></div>
<div id="img_loading" style="z-index:100;position:fixed;border:none;width:100%;height:100%;left:0;top:50%-250px;cursor:no-drop;display:none;">
    <center><h3><b>處理中...</b></h3><img src="~/images/wait.gif" style="width:250px;" /></center>
</div>

@if (Model.OrderBase == null)
{
    return;
}

<form action="OrderEditForShop" method="post" id="form_OrderEdit">
    <input name="id" asp-for="@Model.OrderId" type="hidden" />
    <div class="row">
        <div class="col-md-6 col-sm-6 col-xs-6">
            <h4>訂單資訊</h4>
            <table class="table">
                <tr><td>訂單編號</td><td><b>@Model.OrderBase.OrderId</b></td></tr>

                <tr><td>訂貨日期</td><td>@Model.OrderBase.OrderDate</td></tr>

                <tr>
                    <td>出貨時間</td>
                    <td>
                        @if (Model.OrderBase.ShippedDate != null)
                        {

                            <span class="alert-success"><b>@Model.OrderBase.ShippedDate</b></span>
                        }
                        else
                        {
                            <span class="alert-danger"><b>尚未出貨</b></span>
                        }

                    </td>
                </tr>

                <tr>
                    <td>送貨方式</td>
                    <td>
                        @try
                        {
                            @*@Model.OrderBase.shipViaTypes[(int)Model.OrderBase.ShipVia]*@
                            @*@VNW.Common.EnumExtensions.GetDisplayName((VNW.Models.ShipViaTypeEnum)Model.OrderBase.ShipVia)*@
                            @*@EnumExtensions.GetDisplayName((ShipViaTypeEnum)Model.OrderBase.ShipVia)
                                <select id="ShipVia" name="ShipVia"></select>*@
                            <select name="OrderBase.ShipVia" asp-for="OrderBase.ShipVia" asp-items="@Html.GetEnumSelectList(typeof(VNW.Models.ShipViaTypeEnum))"
                                    class="form-control" id="sel_ShipVia"></select>

                        }
                        catch
                        {
                            <span class="alert-danger lg">異常</span>
                        }
                        <span id="validate_ShipVia" class="text-danger"></span>
                    </td>
                </tr>
                <tr>
                    <td>運費</td>
                    <td>
                        <input name="OrderBase.Freight" id="input_Freight" value="@Model.OrderBase.Freight" readonly class="form-control" />
                        @*<span id="txt_Freight">@Model.OrderBase.Freight</span>*@
                    </td>
                </tr>
                <tr>
                    <td>付款方式</td>
                    <td>
                        @*@EnumExtensions.GetDisplayName((PayEnum)0)*@
                        @*@EnumExtensions.GetDisplayName((PayEnum)Model.OrderBase.Payment)
                            <select id="payment" name="payment"></select>*@
                        <select name="OrderBase.Payment" asp-for="OrderBase.Payment" asp-items="@Html.GetEnumSelectList(typeof(VNW.Common.PayEnum))"
                                class="form-control" id="sel_Payment"></select>
                        <span id="validate_Payment" class="text-danger"></span>
                    </td>
                </tr>
                <tr>
                    <td>狀態</td>
                    <td>
                        @if (Model.OrderBase.Status != null)
                        {
                            @EnumExtensions.GetDisplayName((VNW.Models.OrderStatusEnum)Model.OrderBase.Status)
                        }
                        (@Model.OrderBase.Status)
                    </td>
                </tr>


                <tr>
                    <td>發票處理方式</td>
                    <td>
                        @Model.Invoice
                        <select name="OrderBase.Invoice" asp-for="Invoice" asp-items="@Html.GetEnumSelectList(typeof(InvoiceEnum))"
                                class="form-control" id="sel_Invoice"></select>
                    </td>
                </tr>

                <tr>
                    <td>時間戳記(Row Version)</td>
                    <td>
                        <div>
                            @*@Convert.ToBase64String(Model.OrderBase.TimeStamp)*@
                            @foreach (var b in Model.OrderBase.TimeStamp)
                            {
                                @b
                            }
                            <input name="OrderBase.TimeStamp" type="hidden" value="@Convert.ToBase64String(Model.OrderBase.TimeStamp)" />
                        </div>
                    </td>
                </tr>
            </table>
        </div>

        <div class="col-md-6 col-sm-6 col-xs-6">
            <h4>客戶資訊</h4>
            <table class="table">
                <tr><td>帳號</td><td>@Model.OrderBase.CustomerId</td></tr>
                @if (@Model.OrderBase.Customer != null)
                {
                    <tr><td>聯絡人姓名</td><td>@Model.OrderBase.Customer.ContactName</td></tr>
                    <tr><td>電話</td><td>@Model.OrderBase.Customer.Phone</td></tr>
                }
                <tr><td>出貨地標(公司|組織)</td><td><input asp-for="@Model.OrderBase.ShipName" class="form-control" /></td></tr>
                <tr><td>出貨地址</td><td><input asp-for="@Model.OrderBase.ShipAddress" class="form-control" /></td></tr>
            </table>
        </div>
    </div>

    <span class="text-danger">留意：修改訂單前需先與客戶聯絡確認，送貨方式等變更會調整運費</span>

    <h4>內容</h4>

    @if (Model.Ods != null)
    {
        int irow = 0;
        <table class="table table-bordered" id="table_ods">
            <thead>
                <tr>
                    <td></td>
                    <td>商品</td>
                    <td>(ID)名稱 [變更戳記]</td>
                    <td>@Html.DisplayNameFor(model => model.Ods.FirstOrDefault().Quantity)</td>
                    <td>@Html.DisplayNameFor(model => model.Ods.First().UnitPrice) </td>
                    <td>小記</td>
                    <td></td>
                    <td>店內總庫存</td>
                    <td>店內總預訂量</td>
                    <td>估計可再下單量</td>
                </tr>
            </thead>

            <tbody id="table_ods_body">
                @foreach (var item in Model.Ods)
                {
                    decimal QtyByPrice = item.Quantity * item.UnitPrice; ;
                    totalSum += QtyByPrice;
                    int allowToBuy = (int)item.Product.UnitsInStock - (int)item.Product.UnitsReserved
                        + item.Quantity; //::for
                    if (allowToBuy >= 100) { allowToBuy = 100; }
                    <tr>
                        <td>@(irow + 1) @*<input type="checkbox" name="" class="form-control" checked readonly />*@ </td>
                        <td>
                            <img src="~/images/products/@item.Product.Picture" style="width:80px; " />
                            @*<div class="btn_removeItem btn btn-danger" pid="@item.ProductId"><img src="~/images/delete.svg" />REMOVE</div>*@
                        </td>
                        <td>
                            <input name="Ods[@irow].ProductId" value="@item.ProductId" type="hidden" />
                            (#@item.ProductId)<br>
                            @item.Product.ProductName<br>
                            [@{foreach (var b in item.RowVersion)
                                { @b }}]<br>
                            [@item.Product.LastModifiedTime]
                        </td>
                        <td>
                            <span style="font-size:20px;">@item.Quantity</span>
                            @*<input name="Ods[@irow].Quantity" type="number"
                                class="form-control" value="@item.Quantity" />*@
                            <select class="selectQty form-control" name="Ods[@irow].Quantity" style="min-width:80px;" pid="@item.ProductId" , OldQty="@item.Quantity">
                                @for (int i = 0; i <= allowToBuy; i++)
                                {
                                    if (item.Quantity == i)
                                    {
                                        <option selected>@(i)</option>
                                    }
                                    else
                                    {
                                        <option>@(i)</option>
                                    }
                                }
                            </select>


                        </td>
                        <td><span class="UnitPrice p@(item.ProductId)">@item.UnitPrice</span></td>
                        <td><span class="TotalPrice p@(item.ProductId)">@QtyByPrice</span></td>
                        <td></td>
                        <td><span class="Stock p@(item.ProductId)">@item.Product.UnitsInStock</span></td>
                        <td><span class="Reserved p@(item.ProductId)">@item.Product.UnitsReserved</span></td>
                        <td><span class="Boundary p@(item.ProductId)">@(item.Product.UnitsInStock - item.Product.UnitsReserved)</span></td>
                    </tr>
                    irow++;
                }
            </tbody>
            @{
                OdsRowCount = irow; //::got original ods count generated by Backend, keep this value for frontend jQuery
            }

        </table>
        <span class="text-primary">Tip: 將商品數量設為0代表取消，但一張訂單至少要有一件商品</span>
        <hr />
        <h4>補加商品(新測試功能Beta) <btn class="btn btn-info" id="btn_showAddMoreItem">v</btn></h4>
        <div id="div_AddMoreItem" style="display:none;">
            輸入產品ID
            <input type="number" id="input_pidNew" value="1" class="form-control" style="width:50%" />
            <div class="btn btn-info" id="btn_FindProductById">查詢並帶出商品資訊</div>

            <div id="btn_FetchTest" class="btn btn-default btn-lg" style="display:none;">Fetch Post Test</div>
            @*<div id="btn_JQTest" class="btn btn-warning btn-lg">JQ ajax test</div>*@

            <div class="btn btn-primary" id="btn_AddMoreItem">將該商品加入訂單</div>
            <p /><span id="warning_findProductId" class="alert-danger"></span>
            <table class="table table-bordered" id="table_temp_ods" style="display:none;">
                <tr>
                    <td></td>
                    <td>PID</td>
                    <td>商品</td>
                    <td>單價</td>
                    <td>庫存</td>
                    <td>預訂</td>
                </tr>
                <tr id="tr_temp_ods"></tr>
            </table>
            <table class="table table-bordered" id="table_new_ods" style="display:none;">
                <tr>
                    <td></td>
                    <td>商品</td>
                    <td>PID名稱</td>
                    <td>數量</td>
                    <td>單價</td>
                    <td>小記</td>
                    <td></td>
                    <td>庫存</td>
                    <td>預訂</td>
                    <td></td>
                </tr>
            </table>
        </div>


        <div style="text-align:right;">
            <h3>
                原訂單金額: NT$@((int)totalSum)<br />
                修改後訂單金額: NT$<span id="txt_TotalPriceSum">@((int)totalSum)</span><br>
            </h3>
            <h3>
                運費: NT$<span id="txt_Freight">@Model.OrderBase.Freight</span><br />
                總計(含運費): NT$<span id="txt_TotalPriceSumPlus">@(totalSum + Model.OrderBase.Freight)</span>
            </h3>
            @*<a asp-controller="orders" asp-route-id="@Model.OrderId" class="btn btn-lg btn-danger">送出修改</a>*@

            <div class="btn btn-danger btn-lg" id="btn_submit" style="display:none;">提交修改</div>
            @*<input type="submit" value="送出修改" id="btn_submit" class="btn btn-lg btn-danger" style="display:none;" />*@
            <span id="warningBeforeSubmit" class="text-danger" style="font-size:16px;"></span>
        </div>
    }

</form>

@*<div class="btn_removeItem 99 btn btn-danger" pid="99"><img src="~/images/delete.svg" />REMOVE</div>
    <div class="btn_removeItem 100 btn btn-danger" pid="100"><img src="~/images/delete.svg" />REMOVE</div>*@

<a asp-action="OrderDetailsForShop" asp-controller="orderDetails" asp-route-id="@Model.OrderId"
   class="btn btn-lg btn-default" id="btn_cancel">取消修改|返回前頁</a>

@section endJS{
    @*<script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.min.js"></script>*@
    <script>
    @*
        console.log("jquery start");
        var isError = false;
        var sel_ShipVia = $('#sel_ShipVia');
        var sel_Payment = $('#sel_Payment');
        var sel_Invoice = $('#sel_Invoice');
        var Freight = @Model.OrderBase.Freight;
        var OdsRowCount = @OdsRowCount;
        var OriginalOdsRowCount = @OdsRowCount;

        sel_ShipVia.change(sel_ShipVia_UpdateFreight);
        function sel_ShipVia_UpdateFreight() {
            var totalSum = @totalSum;
            var thisValue = sel_ShipVia.val(); //$(this).val();//  sel_ShipVia.val();
            console.log("sel_ShipVia change " + thisValue);
            switch (thisValue) { //::notice: ths val() is 'string'
                case '0':
                    Freight = 0;
                    $('#txt_Freight').html(Freight);
                    $('#txt_Freight').removeClass("alert-danger");
                    $('#txt_TotalPriceSumPlus').removeClass("alert-danger");
                    $('#validate_ShipVia').html("註: 為確認您在家，送貨員會先與您連絡");
                    break;
                case '1':
                    Freight = 50;
                    $('#txt_Freight').html(Freight+'*');
                    $('#txt_Freight').addClass("alert-danger");
                    $('#txt_TotalPriceSumPlus').addClass("alert-danger");
                    $('#validate_ShipVia').html("註: 冷凍、冷凍、體積過大的商品無法由[超商取貨]");
                    break;
                case '2':
                    Freight = 100;
                    console.log("Freight " + Freight);
                    ////$('#txt_Freight').val(Freight);
                    //$('#txt_Freight').text(Freight);
                    $('#txt_Freight').html(Freight+'*');
                    $('#txt_Freight').addClass("alert-danger");
                    $('#txt_TotalPriceSumPlus').addClass("alert-danger");
                    $('#validate_ShipVia').html("註: 小魔女會加收100元小費，不受理體積過大的商品");
                    break;
                default:
                    //console.log("default");
                    break;
            }
            $('#Freight').val(Freight);
            $('#txt_TotalPriceSumPlus').text(totalSum + Freight);

            //console.log("e o s");
        }

        sel_Payment.change(sel_PaymentChange);
        function sel_PaymentChange() {
            var msg = "";
            console.log("sel_Payment change " + sel_Payment.val());
            switch (sel_Payment.val()) {
                case '0': msg = "只接受VISA卡，不能用美國運通、黑卡、提款卡";
                    break;
                case '1': msg = "不會主動要求您去操作ATM提款或反戰車飛彈";
                    break;
                case '2': msg = "超商店員、送貨員或小魔女會向您收費，建議備好零錢";
                    break;
                default:
                    msg = "someting is wrong";
                    break;
            }
            $('#validate_Payment').html(msg);

        }

        //::qty change - with API via ajax
        $("body").on('change', '.selectQty', function () {
        //$('.selectQty').on('change', function () {
            var newQtyValue = $(this).val();
            console.log("newQtyValue: " + newQtyValue);
            var pid = this.getAttribute("pid");
            var keepThis = $(this);
            console.log("pid " + pid);

            var OldQtyValue = 0;
            OldQtyValue = parseInt(this.getAttribute('OldQty'));
            console.log("OldQtyValue: " + OldQtyValue);

            //::update total price for this product
            var unitPrice = parseInt($('.UnitPrice.' + pid).text());
            console.log(" UnitPrice" + unitPrice);
            var totalPrice = newQtyValue * unitPrice;
            console.log(" 小記 " + totalPrice);
            $('.TotalPrice.' + pid).text(totalPrice +'*');
            $('.TotalPrice.' + pid).addClass("alert-warning");

            var TotalPriceSum = 0;
            TotalPriceSum = parseInt($('#txt_TotalPriceSum').text());
            console.log(" sum " + TotalPriceSum);
            TotalPriceSum += (newQtyValue - OldQtyValue) * unitPrice;
            $('#txt_TotalPriceSum').text(TotalPriceSum);

            this.setAttribute('OldQty', newQtyValue);
            $('#txt_TotalPriceSumPlus').text(TotalPriceSum + Freight);

            if (TotalPriceSum <= 0) {
                $('#btn_submit').hide();
                $('#warningBeforeSubmit').html("提示：總價少於0，至少要買一件商品");
            }
            else {
                $('#btn_submit').show();
                $('#warningBeforeSubmit').html("");
            }

            //::load current stock|reserved from DB
            SetBusy();
            var surl = "../../Products/GetStockReserved";
            $.ajax({
                url: surl,
                type: "POST",
                dateType: "json",
                data: {
                    id: pid,
                },
                success: function (data) {
                    console.log("get data from " + surl);
                    console.log(data);
                    if (data.result == "PASS") {
                        console.log("PASS ");
                        console.log(" detail:" + data.detail);
                        //var i = 0;
                        var stock = parseInt(data.stock);
                        var reserved = parseInt(data.reserved);
                        console.log(" stock:" + stock);
                        console.log(" reserved:" + reserved);
                        //::show values
                        $('.Stock.' + pid).text(stock);
                        $('.Stock.' + pid).addClass("alert-warning");
                        $('.Reserved.' + pid).text(reserved);
                        $('.Reserved.' + pid).addClass("alert-warning");
                        $('.Boundary.' + pid).text(stock - reserved);
                        $('.Boundary.' + pid).addClass("alert-warning");
                        SetReady();
                        $('#btn_cancel').focus();
                        keepThis.focus();
                    }
                    else {
                        //::fail case
                        console.log("fail case");
                        $("#td_serverWarning").text("未得到正確回應");
                        SetReady();
                        $('#btn_cancel').focus();
                        keepThis.focus();
                    }
                }, //success
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr)
                    //$("#td_serverWarning").text("發生未知錯誤");
                    SetReady();
                    $('#btn_cancel').focus();
                    keepThis.focus();
                }//error
            });
        });

        function SetReady() {
            //$('#form_OrderEdit').show();

            $('#img_loading').hide();
            $('#MaskWindow').hide();
        }
        function SetBusy() {
            //$('#form_OrderEdit').hide();

            $('#img_loading').show();
            $('#MaskWindow').show();
        }

        $('#btn_IdFindProduct').click(function () {
            var pid = parseInt($('#input_pidNew').val())
            console.log("find product by id " + pid);
            SetBusy();
            $('#btn_AddMoreItem').hide();
            $('#table_temp_ods').show();
            $('#tr_temp_ods').html("");
            $('#warning_findProductId').text("");
            var surl = "../../Products/GetStockReserved";
            $.ajax({
                url: surl,
                type: "POST",
                dateType: "json",
                data: {
                    id: pid,
                },
                success: function (data) {
                    console.log("get data from " + surl);
                    console.log(data);
                    if (data.result == "PASS") {
                        console.log("PASS ");
                        var image = '<img src="../../images/' + data.picture + '" style="width:80px;"/>';
                        rowData =
                            '<td>' + image+ '</td><td>'
                            + pid + '</td><td>'
                            + data.productName + '</td><td>'
                            + data.unitPrice + '</td><td>'
                            + data.stock + '</td><td>'
                            + data.reserved + '</td>';
                        $("#tr_temp_ods").append(rowData);
                        SetReady();

                        //::if pid is existed in order then do NOT add it
                        console.log("UnitPrice pid class is exist?: " + $('.UnitPrice.' + pid).length);
                        if ($('.UnitPrice.' + pid).length > 0) {
                            $('#warning_findProductId').text("※此商品已在訂單中，不可再加入");
                        }
                        else {
                            $('#btn_AddMoreItem').show();
                        }
                    }
                    else {
                        //::fail case
                        console.log("fail case");
                        $('#warning_findProductId').text("※找不到符合資訊");
                        SetReady();
                    }
                }, //success
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr)
                    $('#warning_findProductId').text("※發生未知錯誤");
                    SetReady();
                }//error
            });

        });
        $('#btn_AddMoreItem').click(function () {
            console.log("add more item");
            //$("#table_new_ods").show();
            $('#table_temp_ods').hide();
            $('#tr_temp_ods').html("");
            var pid = parseInt($('#input_pidNew').val());
            var surl = "../../Products/GetStockReserved";
            $.ajax({
                url: surl,
                type: "POST",
                dateType: "json",
                data: {
                    id: pid,
                },
                success: function (data) {
                    console.log("get data from " + surl);
                    console.log(data);
                    if (data.result == "PASS") {
                        console.log("PASS ");
                        var rowData = '';
                        var pidInput = '<input name="Ods[' + OdsRowCount + '].ProductId" value="' + pid + '" type="hidden"/>  (#' + pid + ')';
                        var nameInput = data.productName;
                        var price = '<input name="Ods[' + OdsRowCount + '].UnitPrice" value="' + data.unitPrice + '" type="hidden" /><span class="UnitPrice ' + pid + '">'  + (data.unitPrice) +'</span>' ;
                        var totalPrice = '<span class="TotalPrice ' + pid + '">0<span/>'; //data.unitPrice;
                        var qtyUpBoundary = data.stock - data.reserved;
                        var qtySelect = '<select class="selectQty form-control" name="Ods[' + OdsRowCount + '].Quantity" pid="' + pid + '">';
                        //for (var i = 0; i <= qtyUpBoundary; i++) {
                        //    qtySelect += '<option>' + i + '</option>';
                        //}
                        qtySelect += '<option>0</option>';
                        qtySelect += '</select>';
                        var image = '<img src="../../images/' + data.picture +'" style="width:80px;"/>';
                        console.log(data.productName);
                        rowData =
                            '<tr class="tr_newP ' + pid + '">'
                            + '<td><span name="OdsRow">' + (OdsRowCount + 1) + '</span> <b class="text-danger">NEW</b> '
                            + '<div class="btn_removeItem btn btn-default" pid="' + pid + '"><img src="../../images/delete.svg"/></div>' + '</td><td>'
                            + image + '</td><td>'
                            + pidInput + ' '
                            + nameInput + '</td><td>'
                            + qtySelect + '</td><td>'
                            + price + '</td><td>'
                            + totalPrice + '</td><td></td><td>'
                            + data.stock + '</td><td>'
                            + data.reserved + '</td><td>'
                            + qtyUpBoundary +'</td></tr>';
                        //$("#table_new_ods").append(rowData);
                        $("#table_ods").append(rowData);
                        $('#btn_AddMoreItem').hide();
                        $('#warning_findProductId').text("※暫先將數量設為0，不累計在總金額");
                        SetReady();
                        OdsRowCount++;
                        //CorrectNewItemNameRow();
                        //updateProductIndexes();
                    }
                    else {
                        //::fail case
                        console.log("fail case");
                        $('#warning_findProductId').text("※找不到符合資訊");
                        SetReady();
                    }
                }, //success
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr)
                    $('#warning_findProductId').text("※發生未知錯誤");
                    SetReady();
                }//error
            });

        });
        $('#btn_AddMoreItem').hide();
        //$("#table_new_ods").hide();

        $('#btn_showAddMoreItem').click(function () {
            $('#div_AddMoreItem').show();
            //$('#btn_showAddMoreItem').text("<");
            $('#btn_showAddMoreItem').hide();
            $('#warning_findProductId').text("※提示：此為測試中的功能；請勿一次加入過多非必要的商品");
        });

        /*PS: 因動態產生的元素無法被選擇器觸發, 補加上作法 */
        $("body").on('click', '.btn_removeItem', function () {
        //$('.btn_removeItem').on('click', function () {
            console.log("body .btn_removeItem click");
            var pid = this.getAttribute("pid");
            console.log("pid " + pid);

            //$('.btn_removeItem.' + pid).remove();
            console.log(" tr_newP with pid is exist or not? " + $('.tr_newP.' + pid).length);
            console.log(" tr_newP is exist or not? " + $('.tr_newP').length);

            //$('#warning_findProductId').text("※提示：刪除功能尚未完成");
            //return; //it causes in issue so we do not open it first;
            if ($('.tr_newP.' + pid).length > 0) {
                $('.tr_newP.' + pid).remove();
                OdsRowCount--;
                console.log("removed tr");
                //CorrectNewItemNameRow(); //::key
                updateProductIndexes();
            }
        });

        //::Key function to update index of name in <input>. Otherwise, removed added items might cause in data lost...

        function CorrectNewItemNameRow() {
            console.log("CorrectNewItemNameRow");
            console.log(" orignal item count: " + OriginalOdsRowCount);
            console.log(" current item count: " + OdsRowCount);
            console.log(" new item count: " + $('.tr_newP').length);
            //var i = 0;
            //for (i = 0; i < $('.tr_newP').length; i++) {
            //    console.log(' ' + i + ':' + $('.tr_newP')[i].getAttribute("class"));
            //}
            //::use each()
            $('.tr_newP').each(function (index) {
                console.log(' each: ' + index);
                //::find name="Ods[index].ProductId": "Ods[" ... "].ProductId"
                //::then udpate the index with corrected row count
                console.log(' name: ' + $(this).find('[name^="Ods["][name$="].ProductId"]').attr('name'));
                $(this).find('[name^="Ods["][name$="].ProductId"]').attr('name',
                    'Ods[' + (index + OriginalOdsRowCount) + '].ProductId');
                $(this).find('[name^="Ods["][name$="].Quantity"]').attr('name',
                    'Ods[' + (index + OriginalOdsRowCount) + '].Quantity');
                $(this).find('[name^="Ods["][name$="].UnitPrice"]').attr('name',
                    'Ods[' + (index + OriginalOdsRowCount) + '].UnitPrice');
                $(this).find('[name^="OdsRow"]').text(index + OriginalOdsRowCount + 1);
            });
        }

        console.log("jquery end");
    *@
        $('#btn_JQTest').click(function () {
            var surl = "../../Products/GetProduct";
            console.log('btn_JQTest');

            var pid = 39;
            $.ajax({
                url: surl,
                type: "POST",
                dateType: "json",
                data: {
                    id: pid, key:'zero'
                },
                success: function (data) {
                    console.log("get data from " + surl);
                    console.log(data);
                    if (data.result == "PASS") {
                        console.log("PASS ");                        
                    }
                    else {
                        //::fail case
                        console.log("fail case");                        
                    }
                }, //success
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr)                    
                }//error
            });

        });
    </script>

    <script>
        /*use original JS here*/
        console.log('js start');

        //::var shared
        var Freight = @Model.OrderBase.Freight;
        var OdsRowCount = @OdsRowCount;
        var OriginalOdsRowCount = @OdsRowCount;
        var TotalPriceSum = @totalSum;
        var isError = false;

        //::elements
        var sel_ShipVia =  document.getElementById('sel_ShipVia');
        var sel_Payment = document.getElementById('sel_Payment');
        var sel_Invoice = document.getElementById('sel_Invoice');        
        var input_Freight = document.getElementById('input_Freight');
        var txt_Freight = document.getElementById('txt_Freight');
        var txt_TotalPriceSum = document.getElementById('txt_TotalPriceSum');
        var txt_TotalPriceSumPlus = document.getElementById('txt_TotalPriceSumPlus');
        var validate_ShipVia = document.getElementById('validate_ShipVia');

        sel_ShipVia.addEventListener('change', sel_ShipVia_UpdateFreight);
        function sel_ShipVia_UpdateFreight() {            
            var thisValue = sel_ShipVia.value; //$(this).val();//  sel_ShipVia.val();
            console.log("sel_ShipVia change " + thisValue);
            switch (thisValue) { //::notice: ths val() is 'string'
                case '0':
                    Freight = 0;
                    txt_Freight.innerHTML = Freight;   //.html(Freight);
                    txt_Freight.classList.remove('alert-danger');  //.removeClass("alert-danger");
                    txt_TotalPriceSumPlus.classList.remove('alert-danger'); //.removeClass("alert-danger");
                    validate_ShipVia.innerHTML = '註: 為確認您在家，送貨員會先與您連絡';
                    break;
                case '1':
                    Freight = 50;
                    txt_Freight.innerHTML = Freight + '*'; //.html(Freight+'*');
                    txt_Freight.classList.add('alert-danger');  //.addClass("alert-danger");
                    txt_TotalPriceSumPlus.classList.add('alert-danger'); //.addClass("alert-danger");
                    validate_ShipVia.innerHTML = '註: 冷凍、冷凍、體積過大的商品無法由[超商取貨]';
                    break;
                case '2':
                    Freight = 100;
                    console.log("Freight " + Freight);
                    txt_Freight.innerHTML = Freight + '*';
                    txt_Freight.classList.add("alert-danger");  // .addClass("alert-danger");
                    txt_TotalPriceSumPlus.classList.add("alert-danger"); //.addClass("alert-danger");
                    validate_ShipVia.innerHTML = '註: 小魔女會加收100元小費，不受理體積過大的商品';
                    break;
                default:
                    //console.log("default");
                    break;
            }
            input_Freight.value = Freight; //lost before
            txt_Freight.value = Freight;
            txt_TotalPriceSumPlus.textContent = (TotalPriceSum + Freight);
            //console.log("e o s");
        }

        document.getElementById('btn_AddMoreItem').style.display = 'none'; //hide
        //document.getElementById('btn_submit').style.display = ''; //show

        function SetBusy() {
            document.getElementById('img_loading').style.display = 'block';
            document.getElementById('MaskWindow').style.display = 'block';
        }
        function SetReady() {
            document.getElementById('img_loading').style.display = 'none';
            document.getElementById('MaskWindow').style.display = 'none';
        }

        //::qty change - with API via ajax
        //$("body").on('change', '.selectQty', function () {
            //$('.selectQty').on('change', function () {
        //document.getElementsByClassName('selectQty')
          //  .addEventListener('change', selectQty_Change);
        document.body
        //document.body.querySelector('.selectQty')
            .addEventListener('change', function () {
            if (event.target.matches('.selectQty')) {
                selectQty_Change(event.target);
            }
        });
        function selectQty_Change(target) {
            var newQtyValue = target.value;
            //var newQtyValue = $(this).val();
            console.log("newQtyValue: " + newQtyValue);
            var pid = target.getAttribute('pid');
            var keepThis = target;  //$(this);
            console.log("pid " + pid);
            var OldQtyValue = 0;
            OldQtyValue = parseInt(target.getAttribute('OldQty'));
            console.log("OldQtyValue: " + OldQtyValue);

            //::update total price for this product
            var element = document.querySelector('.UnitPrice.p' + pid);
            //var unitPrice = parseInt($('.UnitPrice.' + pid).text());
            var unitPrice = parseInt(element.textContent);
            console.log(" UnitPrice" + unitPrice);
            var totalPrice = newQtyValue * unitPrice;
            console.log(" 小記 " + totalPrice);
            document.querySelector('.TotalPrice.p' + pid).textContent = totalPrice; // + '*';
            document.querySelector('.TotalPrice.p' + pid).classList.add('alert-warning');
            
            //var TotalPriceSum = 0;
            //TotalPriceSum = totalSum;
            //    parseInt(txt_TotalPriceSum.textContent);
                //parseInt($('#txt_TotalPriceSum').text());
            console.log(" sum before:" + TotalPriceSum);
            TotalPriceSum += (newQtyValue - OldQtyValue) * unitPrice;
            console.log(" sum after: " + TotalPriceSum);
            txt_TotalPriceSum.textContent = (TotalPriceSum);

            target.setAttribute('OldQty', newQtyValue);
            //this.setAttribute('OldQty', newQtyValue);
            txt_TotalPriceSumPlus.textContent = TotalPriceSum + Freight;

            //totalSum = TotalPriceSum; //updated to global var
            CheckTotalPriceSum();

            //::load current stock|reserved from DB
            SetBusy();
            var surl = "../../Products/GetStockReserved";
            var xhr = new XMLHttpRequest();

            var postData = 'id=' + encodeURIComponent(pid);
            //var postData = JSON.stringify({ id: pid });
            //console.log(' postData: ' + postData);
            //surl = surl + '?id=' + encodeURIComponent(pid);

            xhr.open('POST', surl, true);
            //xhr.open('GET', surl, true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            //xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');            
            xhr.onload = function () {
                if (xhr.status >= 200 && xhr.status < 300) {
                    var data = JSON.parse(xhr.responseText);
                    //document.getElementById('result').innerText = JSON.stringify(data);
                    console.log(' xhr.responseText data' + JSON.stringify(data));
                    console.log(" detail:" + data.detail);
                    if (data.result == "PASS") {
                        //pass case
                        console.log("PASS case");
                        var stock = parseInt(data.stock);
                        var reserved = parseInt(data.reserved);
                        console.log(" stock:" + stock);
                        console.log(" reserved:" + reserved);
                        document.querySelector('.Stock.p' + pid).textContent = stock;
                        document.querySelector('.Stock.p' + pid).classList.add('alert-warning');
                        document.querySelector('.Reserved.p' + pid).textContent = reserved;
                        document.querySelector('.Reserved.p' + pid).classList.add('alert-warning');
                        document.querySelector('.Boundary.p' + pid).textContent = stock - reserved;
                        document.querySelector('.Boundary.p' + pid).classList.add('alert-warning');
                        SetReady();
                        document.getElementById('td_serverWarning').textContent = '';
                        document.getElementById('btn_cancel').focus();
                        keepThis.focus();
                    }
                    else {
                        console.log("fail case");
                        document.getElementById('td_serverWarning').textContent = '未得到正確回應';
                        //SetReady();
                        keepThis.focus();
                    }
                } else {
                    console.error('Request failed with status: ' + xhr.status);
                    document.getElementById('td_serverWarning').textContent = '發生未知問題';
                }
            };
            xhr.onerror = function () {
                console.error('Request failed');
                document.getElementById('td_serverWarning').textContent = '發生未知問題';
                //SetReady();
                //$('#btn_cancel').focus();
                //keepThis.focus();
            };
            xhr.send(postData);
            //xhr.send();
        }

        sel_Payment.addEventListener('change', sel_PaymentChange);
        function sel_PaymentChange() {
            var msg = "";
            console.log("sel_Payment change " + sel_Payment.value);
            switch (sel_Payment.value) {
                case '0': msg = "只接受VISA卡，不能用美國運通、黑卡、提款卡";
                    break;
                case '1': msg = "不會主動要求您去操作ATM提款或反戰車飛彈";
                    break;
                case '2': msg = "超商店員、送貨員或小魔女會向您收費，建議備好零錢";
                    break;
                default:
                    msg = "someting is wrong";
                    break;
            }
            document.getElementById('validate_Payment').innerHTML = msg;
        }

        document.getElementById('btn_showAddMoreItem').addEventListener('click', function () {
            document.getElementById('div_AddMoreItem').style.display = '';
            document.getElementById('btn_showAddMoreItem').style.display = 'none';
            document.getElementById('warning_findProductId').textContent = '※提示：此為測試中的功能；請勿一次加入過多非必要的商品';
        });

        document.getElementById('btn_FindProductById').addEventListener('click', function () {
            var pid = parseInt(document.getElementById('input_pidNew').value);
            console.log("find product by id " + pid);
            SetBusy();
            document.getElementById('btn_AddMoreItem').style.display = 'none';
            document.getElementById('table_temp_ods').style.display = '';
            document.getElementById('tr_temp_ods').innerHTML = '';
            document.getElementById('warning_findProductId').textContent = '';
            var surl = "../../Products/GetProduct";
            var xhr = new XMLHttpRequest();
            var postData = 'id=' + encodeURIComponent(pid) + '&key=' + encodeURIComponent('植物');
            //var postData = JSON.stringify({ Id:pid, search:'未來' });
            console.log('postData: ' + postData);

            //surl = surl + '?id=' + encodeURIComponent(pid);
            //surl = surl + '?id=' + encodeURIComponent(pid) + '&key=未來';
            console.log('surl' + surl);

            xhr.open('POST', surl); //, true);                        
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded",);	
            //xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');    
            xhr.onload = function () {
                if (xhr.status >= 200 && xhr.status < 300) {
                    var data = JSON.parse(xhr.responseText);
                    //document.getElementById('result').innerText = JSON.stringify(data);
                    console.log(' xhr.responseText data' + JSON.stringify(data));
                    console.log(" detail:" + data.detail);
                    if (data.result == "PASS") {
                        //pass case
                        console.log("PASS case");
                        var image = '<img src="../../images/products/' + data.picture + '" style="width:80px;"/>';
                        rowData =
                            '<td>' + image + '</td><td>'
                            + pid + '</td><td>'
                            + data.productName + '</td><td>'
                            + data.unitPrice + '</td><td>'
                            + data.stock + '</td><td>'
                            + data.reserved + '</td>';
                        //document.getElementById('tr_temp_ods').append(rowData);
                        document.getElementById('tr_temp_ods').innerHTML = rowData;
                        SetReady();

                        //::if pid is existed in order then do NOT add it
                        if (document.querySelectorAll('.UnitPrice.p' + pid).length > 0) {
                            document.getElementById('warning_findProductId').textContent = '※此商品已在訂單中，不可再加入';
                        }
                        else {
                            document.getElementById('btn_AddMoreItem').style.display = '';
                        }
                    }
                    else {
                        console.log("fail case");
                        document.getElementById('warning_findProductId').textContent = '※找不到符合資訊, 可能是庫存為0或是暫不開放';
                        SetReady();
                        document.getElementById('input_pidNew').focus();
                    }
                } else {
                    console.error('Request failed with status: ' + xhr.status);
                    document.getElementById('warning_findProductId').textContent = '發生未知問題';
                    //SetReady();
                    document.getElementById('input_pidNew').focus();
                }
            };
            xhr.onerror = function () {
                console.error('Request failed');
                document.getElementById('warning_findProductId').textContent = '發生未知問題';
                //SetReady();
                document.getElementById('input_pidNew').focus();
            };
            xhr.send(postData);            
            //xhr.send();
        });

        document.getElementById('input_pidNew').addEventListener('change', function () {
            document.getElementById('btn_AddMoreItem').style.display = 'none';
        });

        document.getElementById('btn_AddMoreItem').addEventListener('click', function () {
            var pid = parseInt(document.getElementById('input_pidNew').value);
            console.log("add product by id " + pid);
            SetBusy();
            document.getElementById('btn_AddMoreItem').style.display = 'none';
            document.getElementById('table_temp_ods').style.display = 'none';
            document.getElementById('warning_findProductId').textContent = '';

            var surl = "../../Products/GetProduct";
            var xhr = new XMLHttpRequest();
            //var postData = JSON.stringify({ id: pid, key: '蛋白' });
            var postData = 'id=' + encodeURIComponent(pid) + '&key=麥';
            console.log(' postData: ' + postData);
            //surl = surl + '?id=' + encodeURIComponent(pid);

            xhr.open('POST', surl, true);
            //xhr.open('GET', surl, true);
            //xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            //xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');            
            xhr.onload = function () {
                if (xhr.status >= 200 && xhr.status < 300) {
                    var data = JSON.parse(xhr.responseText);

                    console.log(' xhr.responseText data' + JSON.stringify(data));
                    console.log(" detail:" + data.detail);
                    if (data.result == "PASS") {
                        //pass case
                        console.log("PASS case");

                        var rowData = '';
                        var pidInput = '<input name="Ods[' + OdsRowCount + '].ProductId" value="' + pid + '" type="hidden"/>  (#' + pid + ')';
                        var nameInput = data.productName;
                        var price = '<input name="Ods[' + OdsRowCount + '].UnitPrice" value="' + data.unitPrice + '" type="hidden" /><span class="UnitPrice p' + pid + '">' + (data.unitPrice) + '</span>';
                        var totalPrice = '<span class="TotalPrice p' + pid + '">' + data.unitPrice + '<span/>'; //data.unitPrice;
                        var qtyUpBoundary = data.stock - data.reserved;
                        var qtySelect = '<select class="selectQty form-control" name="Ods[' + OdsRowCount + '].Quantity" pid="' + pid + '" OldQty="1">';
                        for (var i = 0; i <= qtyUpBoundary; i++) {
                            if (i == 1) 
                                qtySelect += '<option selected>' + i + '</option>';
                            else
                                qtySelect += '<option>' + i + '</option>';
                        }
                        //qtySelect += '<option>0</option>';
                        qtySelect += '</select>';
                        var image = '<img src="../../images/products/' + data.picture + '" style="width:80px;"/>';

                        console.log(data.productName);
                        rowData =
                        '<tr class="tr_newP p' + pid + '">'
                        + '<td><span name="OdsRow">' + (OdsRowCount + 1) + '</span> <b class="text-danger">NEW</b> '
                        + '<div class="btn_removeItem btn btn-default" pid="' + pid + '">-</div>' + '</td><td>' //<img src="../../images/delete.svg"/>
                        + image + '</td><td>'
                        + pidInput + ' '
                        + nameInput + '</td><td>'
                        + qtySelect + '</td><td>'
                        + price + '</td><td>'
                        + totalPrice + '</td><td></td><td>'
                        + '<span class="Stock p' + pid + '">' + data.stock + '</span></td><td>'
                        + '<span class="Reserved p' + pid + '">' + data.reserved + '</td><td>'
                        + '<span class="Boundary p' + pid + '">' + qtyUpBoundary + '</td></tr>';

                        //$("#table_ods").append(rowData);
                        document.getElementById('table_ods_body').insertAdjacentHTML('beforeend', rowData);
                        //document.getElementById('table_ods').append(rowData);
                        //document.getElementById('table_ods_body').append(rowData);
                        //document.getElementById('table_ods_body').appendChild(rowData);
                        //document.getElementById('table_ods').appendChild(rowData);
                        //document.getElementById('table_ods').insertAdjacentHTML('beforeend',rowData);
                        TotalPriceSum += data.unitPrice * 1;
                        txt_TotalPriceSum.textContent = TotalPriceSum;
                        txt_TotalPriceSumPlus.textContent = (TotalPriceSum + Freight);
                        CheckTotalPriceSum();
                        SetReady();
                        OdsRowCount++;
                        //CorrectNewItemNameRow();
                    }
                    else {
                        console.log("fail case");
                        document.getElementById('warning_findProductId').textContent = '※找不到符合資訊';
                        SetReady();
                        document.getElementById('btn_cancel').focus();
                    }
                } else {
                    console.error('Request failed with status: ' + xhr.status);
                    document.getElementById('warning_findProductId').textContent = '發生未知問題';
                    //SetReady();
                    document.getElementById('btn_cancel').focus();
                }
            };
            xhr.onerror = function () {
                console.error('Request failed');
                document.getElementById('warning_findProductId').textContent = '發生未知問題';
                //SetReady();
                document.getElementById('btn_cancel').focus();
            };
            xhr.send(postData);
            //xhr.send();
        });

        document.body.addEventListener('click', function (event) {
            //console.log('原生JS Click ' + event.target);
            // 檢查點擊的元素是否具有 .btn_removeItem 類
            if (event.target.matches('.btn_removeItem')) {
                // 事件處理程序代碼
                console.log("body .btn_removeItem click");
                //var pid = this.getAttribute("pid");
                var pid = event.target.getAttribute("pid");
                console.log("pid " + pid);

                var tr_newP = document.querySelector('.tr_newP');
                if (tr_newP) {

                    console.log(" TotalPrice " + document.querySelector('.TotalPrice.p' + pid).textContent);
                    var TotalPrice = parseInt(document.querySelector('.TotalPrice.p' + pid).textContent);
                    TotalPriceSum -= TotalPrice; //qty * price
                    txt_TotalPriceSum.textContent = TotalPriceSum;
                    txt_TotalPriceSumPlus.textContent = (TotalPriceSum + Freight);

                    tr_newP.remove();
                    OdsRowCount--;
                    console.log("removed tr");
                    //CorrectNewItemNameRow(); //::key
                    updateProductIndexes();
                    CheckTotalPriceSum();
                }
            }
        });

        //::update index after remove added items
        function updateProductIndexes() {
            console.log('In updateProductIndexes');
            var products = document.querySelectorAll('.tr_newP');
            console.log('  tr_newP length: ' + products.length);
            products.forEach(function (product, index) {
                //console.log('    index: ' + index);
                var newIndex = index + OriginalOdsRowCount;
                //console.log('    newIndex: ' + newIndex);
                product.querySelector('[name^="OdsRow"]').textContent = newIndex + 1;
                product.querySelector('[name^="Ods["][name$="].ProductId"]').name
                    = `Ods[${newIndex}].ProductId`;
                product.querySelector('[name^="Ods["][name$="].Quantity"]').name
                    = `Ods[${newIndex}].Quantity`;
                product.querySelector('[name^="Ods["][name$="].UnitPrice"]').name
                    = `Ods[${newIndex}].UnitPrice`;
            });
            //console.log("end of updateProductIndexes");
        }

        //::Do NOT let <input submit> works immediately after user pressed ENTER
        document.getElementById('btn_submit').addEventListener('click',
            function () {
                //this.style.display = 'none';
                //document.getElementById('btn_submit').style.display = '';
                document.getElementById('form_OrderEdit').submit();
            }
        );

        //::study only, not ready
        //document.getElementById('btn_FetchTest').style.display = 'block';
        document.getElementById('btn_FetchTest').addEventListener('click',function () {
            console.log('btn_FetchTest');
            var surl = "../../Products/GetProduct";            
            var pid = parseInt(document.getElementById('input_pidNew').value);
            console.log("add product by id " + pid);

            //::post
            //var parm = JSON.stringify({ id: 39, key: '未來' });
            //parm = '{"Id":1}';
            //console.log('parm: ' + parm);
            //parm = encodeURI(parm);
            //console.log('parm: ' + parm);

            //::get
            //surl += '?id=' + pid + '&key=未來';
            //console.log('surl: ' + surl);
            //surl = encodeURI(surl);
            console.log('surl: ' + surl);
            //const inputData = { id: 39, key: 'zero' };
            fetch(surl, {
                method: 'POST',
                headers: {
                    //'Content-Type': 'application/json'
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                //body: JSON.stringify(inputData)
                body: ('id=' + 36)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }
                return response.json();
            })
            .then(data => {
                //document.getElementById('result').innerText = JSON.stringify(data);
                console.log('data ' + JSON.stringify(data));
            })
            .catch(error => {
                console.error('Fetch operation failed:', error);
            });
        });       

        CheckTotalPriceSum();
        function CheckTotalPriceSum() {
            console.log('CheckTotalPriceSum: ' + TotalPriceSum);
            if (TotalPriceSum <= 0) {
                document.getElementById('btn_submit').style.display = 'none';
                document.getElementById('warningBeforeSubmit').innerHTML = ("提示：總價少於0，至少要買一件商品");
            }
            else {
                document.getElementById('btn_submit').style.display = '';
                document.getElementById('warningBeforeSubmit').innerHTML = '';
            }
        }        

        console.log('js end');
    </script>

}    