@model IEnumerable<VNW.ViewModels.ShoppingCart>

@{
    ViewData["Title"] = "確認購物車";
    int totalPriceSum = 0;
}

<h2>確認購物車</h2>
<hr />

@*<div class="alert-danger">win size <h1 id="txt_size" ></h1></div>*@

<a asp-action="CategoryList" asp-controller="Categories">再去選購商品</a>
<p> <b>[1.確認購物車]</b> > [2.付款與運送方式] > [3.訂單確認]</p>

<b>
    <span class="alert-danger" id="td_serverWarning">@TempData["td_serverWarning"]</span>
    <span class="alert-success">@TempData["td_serverInfo"]</span>
</b>


@*@if (Model == null)
    {
        <a asp-action="CategoryList" asp-controller="Categories">商品分類</a>
    }
    else if(Model.Count() <=0 )
    {
        <a asp-action="CategoryList" asp-controller="Categories">商品分類</a>
    }*@

<div id="img_loading" style=""><center>處理中...<img src="~/images/loading.gif" style="width:150px;" /></center></div>
<div id="MaskWindow" style="opacity:0.05;background:#0f0;width:120%;height:120%;z-index:99;position:absolute;top:0;left:0;cursor:no-drop;"></div>

@*<div class="modal-overlay js-modal-cancel"></div>*@
<div class="modal-overlay"></div>
<div id="popup" class="modal-box">
    <header>
        <a href="#" class="js-modal-cancel closeBtn">x</a>
        <h3>清空購物車</h3>
    </header>
    <div class="modal-body">
        <p>將您暫存的購物清單全刪除?</p>
    </div>
    <footer>
        <a href="#" class="js-modal-close btn btn-danger">清除</a>
        <a href="#" class="js-modal-cancel btn btn-default">取消</a>
    </footer>
</div>

@*<div id="txt_shoppingCart"></div>*@
<h4>一般訂單</h4>
<table class="table">
    <thead>
        <tr>
            <th>商品</th>
            <th>品名</th>
            <th>單價</th>
            <th>數量</th>
            <th>價格</th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tbody_data">
        @*<tr>
                <td>
                    <img src="~/images/product_4321_0.jpg" style="width:100px;" />
                </td>
                <td>好野狼三輪機車(125CC等級混和動力)</td>
                <td>14,000</td>
                <td>
                    <input type="number" value="1" />
                </td>
                <td>14,000</td>
                <td>
                    <a class="btn btn-default"> 取消</a>
                </td>
            </tr>*@

        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                int PriceByQty = item.Price * item.Qty;
                totalPriceSum += PriceByQty;
                <tr>
                    <td>
                        <a asp-route-id="@item.Pid" asp-controller="products" asp-action="product_details">
                            <img src="~/images/@item.Img" style="width:100px;" />
                        </a>
                    </td>
                    <td>@Html.Raw(item.Name)</td>

                    <td>$<span class="unitPrice @item.Pid">@item.Price</span></td>
                    <td>
                        @*<input type="number" value="@item.Qty" />*@

                        @{
                            //:: NOTICE: stock of product might change
                            // read stock from DB side again-  TBD

                            if (item.Stock <= 0)
                            {
                                //item.Stock = 5;
                                <span class="alert-danger">缺貨</span>
                            }
                            else
                            {
                                <select class="selectQty" pid="@item.Pid" OldQty="@item.Qty">

                                    @for (int i = 1; i <= item.Stock; i++)
                                    {
                                        if (i == @item.Qty)
                                        {
                                            <option selected value="@i">@i</option>
                                        }
                                        else
                                        {
                                            <option value="@i">@i</option>
                                        }
                                    }
                                </select>
                            }
                            if (item.Stock < item.Qty)
                            {
                                <span class="text-danger"><b>庫存不足</b></span>
                            }
                        }
                    </td>
                    <td>$<span class="TotalPrice @item.Pid">@PriceByQty</span></td>
                    <td>
                        <a class="btn btn-default btn_ClearSingleItem" id="btn_ClearSingleItem" pid="@item.Pid">移除</a>
                    </td>
                </tr>
            }//foreach
        }
    </tbody>
</table>

<hr />
<p>
    <div id="div_loadListTools">
        <a id="btn_GetShoppingCart" class="btn btn-success">GetShoppingCart</a>
        <hr />*Data from cookie via Ajax
        <div id="txt_debug" class="alert-info"></div>
    </div>
</p>

@if (Model != null)
{
    @if (Model.Count() > 0)
    {
        <div>
            <a id="btn_clearCart" class="btn btn-danger">清空購物車</a>
        </div>
        <div style="text-align:right;">
            <h4>訂單金額</h4> <h3><b>NT$<span id="TotalPriceSum">@totalPriceSum</span></b></h3>
        </div>

        <div style="text-align:right;">
            <a id="btn_SendOrder" class="btn btn-primary btn-lg">確認並送出</a>
            @*<p></p>註: 在下一個步驟才會正式，暫存的資料庫存量*@
        </div>
    }
}

@section topCSS{
    <style>
        .modal-box {
            display: none;
            position: absolute;
            z-index: 1000;
            width: 80%;
            background: white;
            border-bottom: 1px solid #aaa;
            border-radius: 10px;
            border: 1px solid rgba(0,0,0,0.5);
            background-clip: padding-box;
            opacity: 0.9;
        }

        .modal-box header {
            padding: 1.5em;
            border-bottom: 1px solid #ddd;
        }

            .modal-box header h3,
            .modal-box header h4 {
                margin: 0;
            }

        .modal-box footer {
            padding: 1em;
            border-top: 1px solid #ddd;
            text-align: right;
        }

        .modal-box .modal-body {
            padding: 2em 1.5em;
            /*font-size: 2em;*/
        }

        .modal-overlay {
            /*display:none;*/ /*try*/
            /*opacity:0.5;*/
            position: absolute;
            top: 0;
            left: 0;
            z-index: 900;
            width: 120%; /*try to set large*/
            height: 120%;
            background: rgba(0,0,0,0.5) !important;            
        }

        a.closeBtn { /*change name from close to closeBtn*/
            line-height: 2;
            font-size: 1.5em;
            position: absolute;
            top: 5%;
            right: 2%;
            text-decoration: none;
            color: #bbb;
        }

        a.closeBtn:hover {
            color: #222;
            /*transition: color1s ease;*/
        }
    </style>
}

@section endJS{
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <script>
        console.log("jquery start");

        var IsOrderLock = false;
        //IsOrderLock = true;
        window.document.body.onbeforeunload = function () {
            if (IsOrderLock) {
                $('#td_serverWarning').text("沒結完帳不會讓你離開的!");
                return ("沒結完帳不會讓你離開的!");
            }
        }		

        //::disable F5, Alt+<, Alt+> 
        //$(window.document).keydown(disableF5InnerFunc);
        function disableF5InnerFunc(event) {
            var e;
            //if ($.browser.msie) { e = window.event; } else { e = event; }
            e = event;
            //console.log(e.keyCode);
            if (e.keyCode == 116) {
                console.log("Disable F5 key function");
                $('#td_serverWarning').text("F5鍵被鎖定了!");
                e.keyCode = 0; return false;
            }
            if (e.altKey && (e.keyCode == 37 || e.keyCode == 39)) {
                console.log("Disable Alt+< Alt+>  key function");
                return false;
            }
        };

        var btn_GetShoppingCart = $('#btn_GetShoppingCart');
        //$('#btn_GetShoppingCart').click(GetShoppingCart);
        //var btn_ClearSingleItem = $('#btn_ClearSingleItem');

        $('#div_loadListTools').hide();

        //GetShoppingCart(); //auto pre-load
        btn_GetShoppingCart.text("LOAD");
        btn_GetShoppingCart.on('click',GetShoppingCart);

        function GetShoppingCart() {
            console.log("btn_GetShoppingCart_click");
            //::call api (store p.id in cookie)
            //$('#btn_GetShoppingCart').hide();
            $("#txt_Message").text("處理中");
            btn_GetShoppingCart.text("RELOAD");
            //ajax
            try {
                console.log("ajax r/w data...");
                var surl = "GetShoppingCart";
                $.ajax({
                    url: surl,
                    type: "POST",
                    dateType: "json",
                    data: {
                        @*//pid: @Model.ProductId,
                        //catid: @Model.CategoryId*@
                    },
                    success: function (data) {
                        console.log("get data")
                        console.log(data)

                        if (data.result == "PASS") {
                            console.log("PASS ");
                            console.log("prodCount " + data.prodCount);
                            //$('#txt_shoppingCart').text("購物車 (" + data.prodCount + ")");
                            $('#txt_debug').text(data.detail);
                            console.log("data.detail =" + data.detail);
                            if (data.detail != null) {
                                generateTable(data.detail);
                            }
                            if (data.prodCount <= 0) {
                                $('#btn_SendOrder').hide();
                                $('#btn_clearCart').hide();
                            }
                            else {
                                $('#btn_SendOrder').show();
                                $('#btn_clearCart').show();
                            }
                        }
                        else {
                            //::fail case
                            console.log("fail case");
                            var failMessage = "回傳非預期的資訊";
                            $('#txt_debug').text(failMessage + ' ' + data.detail);
                        }
                        //$('#btn_GetShoppingCart').show();

                    }, //success
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr)
                        $("#txt_failMessage").text("發生未知錯誤");
                    }//error
                });
                return;
            }
            catch (err) {
                console.log("exception " + err);
                //btn_GetShoppingCart.show();
                $("#txt_failMessage").text("發生未知錯誤");
                return;
            }
        }//

        function generateTable(dataDetail) {
            try {
                //::covert object from json string
                var jsonRes = JSON.parse(dataDetail);
                //var jsonRes = JSON.stringify(data.detail);
                console.log(jsonRes);
                console.log(jsonRes.length);
                //console.log(jsonRes);
                var tempstr = "";
                $('#tbody_data').text(""); //reset
                //::update data in UI table
                for (var i = 0; i < jsonRes.length; i++) {

                    var priceByQty = jsonRes[i].Price * jsonRes[i].Qty;

                    tempstr += '<tr><td><img src="../images/'
                        + jsonRes[i].Img + '" style="width:100px;"/></td><td>'
                        + jsonRes[i].Name + '</td><td>'
                        + jsonRes[i].Price + '</td><td><input type="number" value="'
                        + jsonRes[i].Qty + '" />'
                        + '</td><td>' + priceByQty
                        + '</td> <td> <div class="btn btn-info">取消</div>  </td> </tr>';
                }
                $('#tbody_data').append(tempstr);
            }
            catch
            {

            }
        }

        $('#btn_clearCart').on('click',function () {
            console.log("clear cart click");
            //SetBusy();
            $(".modal-overlay").show();
            $(".modal-box").fadeIn(500, function () {
                console.log("show modal box");
            });
            //$(".modal-box").fadeTo(500,1);
        });

        //::use class (share same name for different buttons, switch by pid)
        $('.btn_ClearSingleItem').on('click', function () {
            console.log("use class, cancel item click");
            //SetBusy(); return; //study only

            var pid = 0;
            //::get pid from element
            pid = this.getAttribute("pid");
            console.log("pid " + pid);
            if (pid != 0) {
                //::call api
                console.log("ajax, cancel item " + pid);
                var surl = "RemoveShoppingCart";
                $.ajax({
                    url: surl,
                    type: "POST",
                    dateType: "json",
                    data: {
                        pid: pid
                    },
                    success: function (data) {
                        console.log("get data")
                        console.log(data)
                        if (data.result == "PASS") {
                            console.log("PASS ");
                            //GetShoppingCart(); //try to reload
                            window.location = "PrepareOrder";
                        }
                        else {
                            //::fail case
                            console.log("fail case");
                            //$("#txt_failMessage").text("未得到正確回應");
                            $("#td_serverWarning").text("未得到正確回應");
                        }
                    }, //success
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr)
                        //$("#txt_failMessage").text("發生未知錯誤");
                        $("#td_serverWarning").text("發生未知錯誤");
                    }//error
                });
            }
        });

        //::Qty change
        $('.selectQty').on('change',function () {
            //console.log("use class, change select option");

            var newQtyValue = $(this).val();
            console.log("newQtyValue: " + newQtyValue);

            var OldQtyValue = 1;
            OldQtyValue = parseInt(this.getAttribute('OldQty'));
            console.log("OldQtyValue: " + OldQtyValue);

            if (OldQtyValue == newQtyValue) {
                console.log("do not change");
                return;
            }
            this.setAttribute('OldQty', newQtyValue);

            var pid = this.getAttribute("pid");
            //console.log("pid " + pid);

            //::update total price for this product
            //:: Total Price = UnitPrice * Qty
            var unitPrice = parseInt($('.unitPrice.' + pid).text());
            $('.TotalPrice.' + pid).text(newQtyValue * unitPrice);

            SetBusy();

            //::call api to update qty in cookie
            //::update qty select range?  {1 ~ stock}
            var surl = "UpdateQty";

            var keepThis = $(this);

            $.ajax({
                url: surl,
                type: "POST",
                dateType: "json",
                data: {
                    pid: pid,
                    qty: newQtyValue
                },
                success: function (data) {
                    console.log("get data")
                    console.log(data)
                    if (data.result == "PASS") {
                        console.log("PASS ");

                        //::update Stock to <option>                                                
                        keepThis.empty(); //remove sub <option>
                        //keepSelectObj.remove(); //No, it includes <select>
                        console.log(" stock:" + data.detail);
                        var i = 0;
                        var _stock = parseInt(data.detail);                        
                        //:: notice Int? or Short?

                        if (newQtyValue > _stock) {
                            keepThis.parent().append('<b class="text-danger">庫存不夠!</b>');
                            newQtyValue = _stock;
                        }
                        else {
                            //remove warning
                            if (keepThis.parent().find('b').length > 0) {
                                console.log('remove warning');
                                keepThis.parent().find('b').remove();
                            }
                        }                        
                        
                        for (i = 0; i < _stock; i++) {
                            //console.log(" " + i + " " + keepThis.val());
                            if ((i+1) == newQtyValue) {
                                keepThis.append('<option selected value="' + (i+1) +'">' + (i+1) + '</option>');
                            }
                            else {
                                keepThis.append('<option value="' + (i + 1) + '">' + (i + 1) + '</option>');
                            }                            
                        }

                        //:: Total Price Sum
                        var oldSum = parseInt($('#TotalPriceSum').text());
                        console.log("oldSum: " + oldSum);

                        var priceChange = (newQtyValue - OldQtyValue) * unitPrice;
                        console.log("priceChange: " + priceChange);

                        var newSum = oldSum + priceChange;
                        console.log("newSum: " + newSum);
                        $('#TotalPriceSum').text(newSum);
                        SetReady();
                    }
                    else {
                        //::fail case
                        console.log("fail case");
                        //$("#td_serverWarning").text("發生未知錯誤");
                        $("#td_serverWarning").text("未得到正確回應");
                        SetReady();
                    }
                }, //success
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr)
                    $("#td_serverWarning").text("發生未知錯誤");
                    SetReady();
                }//error
            });

        });

        function SetBusy() {
            $('#img_loading').show();
            $('#MaskWindow').show();
        }
        function SetReady() {
            $('#img_loading').hide();
            $('#MaskWindow').hide();
        }
        SetReady(); //hide busy window

        //::for modal study
        $(".modal-box").hide();
        $(".modal-overlay").hide();
        $('.js-modal-close').click(function (e) {
            //$('#popup').hide();
            e.preventDefault();
            $(".modal-box").fadeOut(500, function () {
                $(".modal-overlay").hide();
                console.log("call api to clear data");
                var surl = "ClearShoppingCart";
                SetBusy();
                $.ajax({
                    url: surl,
                    type: "POST",
                    dateType: "json",
                    data: {
                        //pid: pid
                    },
                    success: function (data) {
                        console.log("get data")
                        console.log(data)
                        if (data.result == "PASS") {
                            console.log("PASS ");
                            //GetShoppingCart(); //try to reload
                            window.location = "PrepareOrder";
                        }
                        else {
                            //::fail case
                            console.log("fail case");
                        }
                        SetReady();
                    }, //success
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr)
                        //$("#txt_failMessage").text("發生未知錯誤");
                        SetReady();
                    }//error
                });//ajax

            });
        });
        //$(".modal-box").fadeIn(500, function () {
        //});
        $('.js-modal-cancel').click(function (e) {
            //$('#popup').hide();
            e.preventDefault();
            //$(".modal-box").fadeOut(500, function () {
            $(".modal-box").hide();
            $(".modal-overlay").hide();
            console.log("Cancelled clear");
            SetReady();
            //});
        });

        var i_acc = 0;

        $(window).resize(function () {
            //::fixed issue - overlay is not cover window on phone mode sometimes
            /*
            i_acc++;
            if (i_acc > 10) i_acc = 0;
            $("#txt_size").text("#" + i_acc + " (" + $(window).outerWidth() + ', ' + $(window).outerHeight() + " ) " + " " + window.devicePixelRatio);
            $(".modal-overlay").css({
                width: $(window).outerWidth() * window.devicePixelRatio,
                height: $(window).outerHeight() * window.devicePixelRatio
            });
            */
        }); 

        console.log("jquery end");
    </script>

}
