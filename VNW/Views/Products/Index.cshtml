@model IEnumerable<VNW.Models.Product>

@{
    ViewData["Title"] = "商品管理(店家模式)";
}

<h2>@ViewData["Title"]</h2>

<b>
    <span class="text-danger">
        @TempData["td_serverMessage"]
    </span>
</b>

@if (ViewBag.UserAccount == null || ViewBag.UserAccount == "")
{
    <p>
        <a asp-action="Login" asp-controller="customers">Login</a>
    </p>
}
else
{
    <span>員工: 
        @ViewData["ShopAccount"]
    </span>    
    <p>
        <a asp-action="Create" class="btn btn-success">加入新商品</a>
    </p>
}

    <div id="div_condition" style="border:solid; border-width:1px; padding:2px;border-radius:5px;border-color:lightgray;">
        @{
            string condition = (string)ViewData["condition"];
        }
        @*@condition*@
        @if (condition != "reserved")
        {<a class="btn btn-primary" asp-route-condition="reserved">有預訂</a>}
        else
        {<a class="btn btn-default" style="border:solid;border-width:2px;" asp-route-condition="reserved">有預訂</a>}

        @if (condition != "less")
        {<a class="btn btn-warning" asp-route-condition="less">缺貨</a>}
        else
        {<a class="btn btn-default" style="border:solid;border-width:2px;" asp-route-condition="less">缺貨</a>}

        @if (condition != "error")
        {<a class="btn btn-danger" asp-route-condition="error">異常項目</a>}
        else
        {<a class="btn btn-default" style="border:solid;border-width:2px;" asp-route-condition="error">異常項目</a>}

        @if (condition == null)
        {<a class="btn btn-default" style="border:solid;border-width:2px;" asp-route-condition="all">全部</a>}
        else
        {<a class="btn btn-default" asp-route-condition="all">全部</a>}

    </div>

<div id="pageSelection">
    @{
        //:: page
        int totalpage = 0; int ipp = 10; int totalCount = 0;
        int pageNum = 0;
        if (ViewData["page"] != null)
            { pageNum = (int)ViewData["page"]; }
        if (ViewData["totalCount"] != null)
        {
            totalpage = (int)ViewData["totalCount"] / ipp + 1;
            totalCount = (int)ViewData["totalCount"];
            <ul class="pagination">
                @{
                    if (pageNum > 0)
                    {
                        <li class="page-item"><a class="page-link" href="?page=@(pageNum)"><</a></li>
                    }
                    else
                    {
                        <li class="page-item disabled"><a class="page-link"><</a></li>
                    }

                    for (int i = 0; i < totalpage; i++)
                    {
                        if (i == pageNum)
                        {
                            <li class="page-item active">
                                <a class="page-link">@(i + 1)</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a href="?page=@(i + 1)" class="page-link"> @(i + 1) </a>
                            </li>
                        }
                    } //for
                    if (pageNum < totalpage - 1)
                    {
                        <li class="page-item"><a class="page-link" href="?page=@(pageNum+2)">></a></li>
                    }
                    else
                    {
                        <li class="page-item disabled"><a class="page-link">></a></li>
                    }
                }
            </ul>
            <br/>
            <span>取 @Model.Count() / @totalCount 筆</span>
        }
    }
    
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.QuantityPerUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
            <th>
                <div style="color:blue">
                    @Html.DisplayNameFor(model => model.UnitsInStock)
                </div>
            </th>
            <th>
                <div style="color:blue">@Html.DisplayNameFor(model => model.UnitsReserved)*</div>                    
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReorderLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsOnOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discontinued)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @*<b><a asp-action="Details" asp-route-id="@item.ProductId">@Html.DisplayFor(modelItem => item.ProductName)</a> </b>*@
                    #@item.ProductId-@Html.DisplayFor(modelItem => item.ProductName)<br />

                    @if ((string)ViewData["UserLevel"] == "2B" || (string)ViewData["UserLevel"] == "1A")
                    {
                        @*<a asp-action="EditForShop" asp-route-id="@item.ProductId" class="btn btn-primary">編輯(店家)</a>*@
                        <a asp-action="ProductDetailForShop" asp-route-id="@item.ProductId" class="btn btn-success">檢視</a><br/>
                    }
                    @if ((string)ViewData["UserLevel"] == "1A")
                    {

                        <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-danger">管理編輯</a><br />
                        @*<a asp-action="Delete" asp-route-id="@item.ProductId" class="btn btn-danger">管理人刪除</a>*@
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantityPerUnit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitsInStock)
                    @if (item.UnitsInStock <=0 || item.UnitsInStock==null)
                    {
                        <span class="alert-danger">缺貨</span>
                    }
                </td>
                <td>
                    <span style="font-size:20px;">@Html.DisplayFor(modelItem => item.UnitsReserved)</span>

                    @if (item.UnitsReserved > item.UnitsInStock)
                    {
                        <span class="alert-danger">超賣(Overbooking)</span>
                    }
                    @if (item.UnitsReserved < 0)
                    {
                        <span class="alert-danger">異常</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReorderLevel)

                    @if (item.ReorderLevel >= item.UnitsInStock)
                    {
                        <span class="alert-warning">不足</span>                        
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitsOnOrder)
                </td>
                
                <td>
                    @Html.DisplayFor(modelItem => item.Discontinued)
                </td>
                <td>
                    @item.Category.CategoryName
                    (#@Html.DisplayFor(modelItem => item.Category.CategoryId))
                </td>
                <td>

                </td>
            </tr>
        }
    </tbody>
</table>
