@model VNW.Models.Employee

@{
    ViewData["Title"] = "修改員工密碼";
}

<h2>@ViewData["Title"]</h2>

<div>
    <h3 class="alert-info">@TempData["td_serverMessage"]</h3>
    <h3 class="alert-danger">@TempData["td_serverWarning"]</h3>
</div>

@if (Model == null)
{
    <h3 class="alert-danger">未明錯誤, 資料是空的</h3>
    return;
}

<div>
    <a asp-action="Index">回到清單</a> |
    <a asp-action="Details" asp-route-id="@Model.Id">回到細節</a>
</div>

<div id="MaskWindow" style="opacity:0.05;background:#000;width:200%;height:200%;z-index:99;position:absolute;top:0;left:0;cursor:no-drop;display:none;"></div>
<div id="img_loading" style="z-index:100;position:fixed;border:none;width:100%;height:100%;left:0;top:50%-250px;cursor:no-drop;display:none;">
    <center><h3><b>處理中...</b></h3><img src="~/images/wait.gif" style="width:250px;" /></center>
</div>

ID:  @Model.Id <br />
員工姓名: @Model.Name <br />
郵件帳號: @Model.Email <br />
<hr />

<div class="row">
    <div class="col-md-4">

        <form id="form_EditPassword" asp-action="EditPassword" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @*<input type="hidden" asp-for="Id" />*@

            <div class="form-group">
                <label class="control-label">原本密碼</label> <b class="text-danger">*</b>
                <input id="OldPassword" name="OldPassword" class="form-control" type="password" />
                <span id="validation_OldPassword" class="text-danger field-validation-valid"></span>
            </div>
            <div class="form-group">
                <label class="control-label">新密碼</label> <b class="text-danger">*</b>
                <input id="NewPassword" name="NewPassword" class="form-control" type="password" />
                <span id="validation_NewPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">新密碼確認</label> <b class="text-danger">*</b>
                <input id="NewPassword_Confirm" name="NewPassword_Confirm" class="form-control" type="password" />
                <span id="validation_NewPassword_Confirm" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">驗證碼</label> <b class="text-danger">*</b>
                <div id="div_Captcha" style="user-select:none;font-size:30px;border:solid;border-width:1px;padding:2px;width:150px;height:50px;text-align:center;background-color:lightgreen;">@ViewData["Captcha"]</div>
                <btn id="btn_ChangeCaptcha" class="btn btn-danger">看不懂請更換</btn><br />
                <p>
                    <input id="Captcha" name="Captcha" class="form-control" />
                    <span id="validation_Captcha" class="text-danger"></span>
                </p>
            </div>
            <div class="form-group">
                <div class="btn btn-primary" id="btn_precheck">驗證與更新</div>
                <div class="btn btn-danger" id="btn_submit" style="display:none;">送出更新</div>
                @*<input id="btn_submitInput" type="submit" value="送出更新" />*@
            </div>
        </form>
    </div>
</div>


@section endJS{
    @*<script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.min.js"></script>*@
    <script>
        console.log("JS start");
        var isError = false;
        //::elements
        const OldPassword = document.getElementById('OldPassword');
        const NewPassword = document.getElementById('NewPassword');
        const NewPassword_Confirm = document.getElementById('NewPassword_Confirm');
        const Captcha = document.getElementById('Captcha');        
        const btn_precheck = document.getElementById('btn_precheck');
        const btn_ChangeCaptcha = document.getElementById('btn_ChangeCaptcha');
        //const btn_submitInput = document.getElementById('btn_submitInput');
        const btn_submit = document.getElementById('btn_submit');        

        async function CheckValues() {
            console.log('CheckValues()');
            var isFail = false;

            if (OldPassword.value == "" || OldPassword.value.length <= 3) {
                console.log('check old pwd fail 101');
                document.getElementById('validation_OldPassword').textContent = "長度太短";
                OldPassword.focus();
                isFail = true;
                ShowSubmit(false);
                return;
            }
            else if (OldPassword.value.length >= 25) {
                console.log('check old pwd fail 102');
                document.getElementById('validation_OldPassword').textContent = "長度太長";
                OldPassword.focus();
                isFail = true;
                ShowSubmit(false);
                return;
            }
            else {
                document.getElementById('validation_OldPassword').textContent = "";                
            }

            if (NewPassword.value == "" || NewPassword.value.length <= 5) {
                console.log('check new pwd fail 201');
                document.getElementById('validation_NewPassword').textContent = "太短";
                NewPassword.focus();
                isFail = true;
                ShowSubmit(false);
                return;
            }
            else if (NewPassword.value.length > 20) {
                console.log('check new pwd fail 202');
                document.getElementById('validation_NewPassword').textContent = "太長";
                NewPassword.focus();
                isFail = true;
                ShowSubmit(false);
                return;
            }
            else if (!checkPWDFormat(NewPassword.value)) {
                console.log('check new pwd fail 203');
                document.getElementById('validation_NewPassword').textContent = "請包含英文字母(A-Z或a-z)與數字(0-9)";
                isFail = true;
                ShowSubmit(false);
                return;
            }
            else
                document.getElementById('validation_NewPassword').textContent = "";

            if (NewPassword.value != NewPassword_Confirm.value) {
                console.log('check new pwd confirm fail 301');
                document.getElementById('validation_NewPassword_Confirm').textContent = "不一致";
                NewPassword_Confirm.focus();
                isFail = true;
                ShowSubmit(false);
                return;
            }
            else
                document.getElementById('validation_NewPassword_Confirm').textContent = "";

            if (Captcha.value == "" || Captcha.value.length < 4) {
                console.log('check captcha fail 401');
                document.getElementById('validation_Captcha').textContent = "長度不相符";
                Captcha.focus();
                isFail = true;
                ShowSubmit(false);
                return;
            }
            else {
                document.getElementById('validation_Captcha').textContent = "";
                //ShowSubmit(true);
            }
            
            if (await PreCheckCaptchaDB() != 'PASS') {
                console.log('check captcha fail 402');
                document.getElementById('validation_Captcha').textContent = "不相符";
                Captcha.focus();
                ShowSubmit(false);
                return;
            }

            //::notice async wait
            var isPassCheckOldPwd = await Fetch_CompareOldPasswordFromDB();
            console.log('   isPassCheckOldPwd:' + isPassCheckOldPwd);
            if (isPassCheckOldPwd == 'PASS') {
                document.getElementById('validation_OldPassword').textContent = "";
            }
            else {
                isFail = true;
                ShowSubmit(false);
                return;
            }                

            if (isFail) {
                ////btn_submitinput.style.display = 'none';
                btn_submit.style.display = 'none';
            }
            else {
                ////btn_submitinput.style.display = '';
                //btn_submit.style.display = '';
                //::move this item in last position due to async issue
                //::auto submit
                document.getElementById('form_EditPassword').submit();
            }
        }

        function ShowSubmit(_isShow) {
            if (_isShow) {
                //::pass case
                //btn_submitInput.style.display = '';
                //btn_submit.style.display = '';
                //::auto submit
                document.getElementById('form_EditPassword').submit();
            }
            else {
                //btn_submitInput.style.display = 'none';
                btn_submit.style.display = 'none';
            }
            btn_precheck.style.display = '';
        }

        btn_submit.addEventListener('click', function () {
            //CheckValues();
            //if(isPass)
            document.getElementById('form_EditPassword').submit();
        });

        btn_precheck.addEventListener('click', function () {
            btn_precheck.style.display = 'none';
            CheckValues();
        });

        function xhr_CompareOldPasswordFromDB() {
            @*//::call api
            var _isPass = false;

            var surl = '../CheckOldPassword';
            console.log('call api ' + surl);
            SetBusy();
            var postData = 'id=' + encodeURIComponent(@Model.Id) + '&OldPassword=' + OldPassword.value;
            console.log(' postData: ' + postData);//debug only
            var xhr = new XMLHttpRequest();
            xhr.open('POST', surl, true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.onload = function () {
                console.log('xhr on load');
                if (xhr.status >= 200 && xhr.status < 300) {
                    var data = JSON.parse(xhr.responseText);
                    console.log(xhr.responseText);
                    if (data.result == "PASS") {
                        console.log('PASS');
                        _isPass = true;
                        //SetReady();
                        return _isPass;
                    }
                    else {
                        _isPass = false;
                        return _isPass;
                    }
                }

            };
            xhr.onerror = function () {
                //console.log('xhr on error');
                console.error('Request failed');
            };

            console.log('before send data');
            xhr.send(postData);
            console.log('after send data');*@
        }

        async function Fetch_CompareOldPasswordFromDB() {            
            var _res = "tbd";
            SetBusy();
            var surl = '../CheckOldPassword';
            console.log('Fetch_CompareOldPasswordFromDB calls api ' + surl);
            var postData = 'id=' + encodeURIComponent(@Model.Id) + '&OldPassword=' + OldPassword.value;
            //console.log(' postData: ' + postData);//debug only
            //var response =
            await fetch(surl, {
                method: 'POST',
                headers: {
                    //'Content-Type': 'application/json'
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                //body: JSON.stringify(inputData)
                body: (postData)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok ' + response.statusText);
                        document.getElementById('validation_OldPassword').textContent = "讀密碼時發生錯誤A";
                        //_isPass = false;
                        ShowSubmit(false);
                        OldPassword.focus();
                    }
                    console.log('fetch response');
                    SetReady();
                    return response.json();
                })
                .then(data => {
                    console.log('fetch data');
                    console.log(data);
                    //console.log(JSON.stringify(data));
                    if (data.result == 'PASS') {
                        _res = 'PASS';
                        document.getElementById('validation_OldPassword').textContent = "";
                        console.log('check old pwd PASS :) ');
                        //ShowSubmit(true);                        
                    }
                    else {
                        _res = 'fail';
                        var failMsg = "舊密碼不相符";
                        if (data.detail == 'Access Deny') {
                            failMsg = "無權登入查詢!";
                            console.log('fail 102');
                            //redirect to login page
                        }
                        if (data.retryCount >= 3) {
                            console.log('fail 103');
                            failMsg += ' 重試已超過3次，暫時不能再試';
                        }
                        else {
                            console.log('fail 104');
                            ShowSubmit(false);
                        }
                        document.getElementById('validation_OldPassword').textContent = failMsg;
                        OldPassword.focus();
                    }
                })
                .catch(error => {
                    _res = 'err';
                    console.log('fail 105');
                    console.error('Fetch operation failed:', error);
                    document.getElementById('validation_OldPassword').textContent = "讀密碼時發生錯誤B";                    
                    ShowSubmit(false);
                    OldPassword.focus();
                    SetReady();                    
                });
            //:: notice: waiting for data response
            console.log('end of Fetch_CompareOldPasswordFromDB');
            //return response.json();
            //console.log(' response in fetch fun: ' + response);            
            return _res;
        }

        function checkPWDFormat(value) {
            //value.sub
            console.log('checkPWDFormat')
            //console.log('value: ' + value);
            var pattern3 = new RegExp('^(?=.*[0-9])(?=.*[A-Za-z]).{5,20}$'); //pass case
            //var pattern3 = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{5,20}$/; //pass case
            //var pattern3 = new RegExp('^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{5,20}$'); //pass case
            //var pattern3 = '/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{5,20}$/'; //NG case, more ' '
            //var pattern3 = new RegExp('^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{5,20}$'); //ng case, lost \
            //console.log('pattern3: ' + pattern3);
            if (value.match(pattern3) == null) {
                console.log('不合');
                return false;
            }
            else {
                console.log('合');
                return true;
            }
        }

        //btn_submitInput.style.display = 'none';
        btn_submit.style.display = 'none';

        function SetBusy() {
            document.getElementById('img_loading').style.display = 'block';
            document.getElementById('MaskWindow').style.display = 'block';
        }
        function SetReady() {
            document.getElementById('img_loading').style.display = 'none';
            document.getElementById('MaskWindow').style.display = 'none';
        }

        btn_ChangeCaptcha.addEventListener('click', function () {
            var surl = '../../Customers/UpdateCaptcha';
            surl = '@ViewData["currentPath"]/Customers/UpdateCaptcha';
            console.log(' ' + surl);
            SetBusy();
            fetch(surl, {
                method: 'POST',
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok ' + response.statusText);
                        document.getElementById('validation_Captcha').textContent = "讀密碼時發生錯誤A";
                    }
                    console.log('fetch response');
                    SetReady();
                    return response.json();
                })
                .then(data => {
                    console.log('fetch data');
                    console.log(data);
                    //console.log(JSON.stringify(data));
                    if (data.result == 'PASS') {
                        document.getElementById('div_Captcha').textContent = data.captcha;

                    }
                    else {
                        document.getElementById('validation_Captcha').textContent = "讀密碼時發生錯誤C";
                    }
                    Captcha.focus();
                })
                .catch(error => {
                    console.error('Fetch operation failed:', error);
                    document.getElementById('validation_Captcha').textContent = "讀密碼時發生錯誤B";
                    Captcha.focus();
                    SetReady();
                });
        });

        async function PreCheckCaptchaDB() {
            var surl = '@ViewData["currentPath"]/Customers/CheckCaptcha';
            console.log(' ' + surl);
            var _res = 'tbd';
            var postData = 'Captcha=' + encodeURIComponent(Captcha.value);
            SetBusy();
            await fetch(surl, {
                method: 'POST',
                headers: {                    
                    'Content-Type': 'application/x-www-form-urlencoded'
                },                
                body: (postData)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok ' + response.statusText);
                        document.getElementById('validation_Captcha').textContent = "驗證時發生錯誤A";
                    }
                    console.log('fetch response');
                    SetReady();
                    return response.json();
                })
                .then(data => {
                    console.log('fetch data');
                    console.log(data);
                    //console.log(JSON.stringify(data));
                    if (data.result == 'PASS') {                        
                        _res = 'PASS';
                    }                    
                    //Captcha.focus();
                    SetReady();
                })
                .catch(error => {
                    console.error('Fetch operation failed:', error);
                    document.getElementById('validation_Captcha').textContent = "讀密碼時發生錯誤B";
                    //Captcha.focus();
                    SetReady();
                });
            return _res;
        }

        console.log("JS end");
    </script>
}
